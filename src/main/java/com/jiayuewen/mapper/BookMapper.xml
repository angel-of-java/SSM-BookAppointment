<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiayuewen.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.jiayuewen.bean.Book">
    <id column="book_id" jdbcType="BIGINT" property="bookId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="introd" jdbcType="VARCHAR" property="introd" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="appointNo" jdbcType="INTEGER" property="appointNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, name, introd, number, appointNo
  </sql>
  <select id="selectByExample" parameterType="com.jiayuewen.bean.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where book_id = #{bookId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiayuewen.bean.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiayuewen.bean.Book">
    insert into book (book_id, name, introd, 
      number, appointNo)
    values (#{bookId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{introd,jdbcType=VARCHAR}, 
      #{number,jdbcType=INTEGER}, #{appointNo,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jiayuewen.bean.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        book_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="introd != null">
        introd,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="appointNo != null">
        appointNo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="introd != null">
        #{introd,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="appointNo != null">
        #{appointNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiayuewen.bean.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.introd != null">
        introd = #{record.introd,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.appointNo != null">
        appointNo = #{record.appointNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set book_id = #{record.bookId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      introd = #{record.introd,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      appointNo = #{record.appointNo,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiayuewen.bean.Book">
    update book
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="introd != null">
        introd = #{introd,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="appointNo != null">
        appointNo = #{appointNo,jdbcType=INTEGER},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiayuewen.bean.Book">
    update book
    set name = #{name,jdbcType=VARCHAR},
      introd = #{introd,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      appointNo = #{appointNo,jdbcType=INTEGER}
    where book_id = #{bookId,jdbcType=BIGINT}
  </update>

  <!-- 手动添加 -->
  
  <select id="getAllBook" resultType="com.jiayuewen.bean.Book">
        select * from book
  </select>
  
  <select id="getBookByName" resultMap="BaseResultMap" parameterType="String">
  		select * from book where name like "%"#{name}"%"
  </select>
  
  <select id="getBookCountByBookId" resultType="int" parameterType="long">
  		select count(*) from book where book_id = #{bookId}
  </select>
  
  <update id="updateAppointNo" parameterType="long">
    	update book 
    	set appointNo = appointNo - 1 
    	where book_id = #{bookId}
  </update>
  
  <update id="updateAddAppointNo" parameterType="long">
    	update book 
    	set appointNo = appointNo + 1 
    	where book_id = #{bookId}
  </update>
  
</mapper>